{"version":3,"sources":["logo.svg","redux/modules/dog/types.js","redux/modules/dog/reducers.js","redux/reducers.js","redux/modules/dog/actions.js","redux/modules/dog/sagas.js","redux/sagas.js","redux/store.js","components/Dog/DogComponent.js","components/Dog/index.js","components/Dog/DogContainer.js","components/Title/TitleComponent.js","components/Title/index.js","components/Title/TitleContainer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","API_CALL_REQUEST","API_CALL_SUCCESS","API_CALL_FAILURE","initialState","fetching","dog","error","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","dogSuccess","dogFailure","watcherSaga","workerSaga","regenerator_default","a","wrap","_context","prev","next","takeLatest","stop","_marked","response","_context2","call","fetchDog","sent","data","message","put","t0","_marked2","axios","method","url","sagas","run","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","DogComponent","props","react_default","createElement","src","logo","className","alt","onClick","onRequestDog","DogContainer","connect","dispatch","TitleComponent","title","style","color","TitleContainer","App","es","Dog","Title","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5d131ab9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// We’re beginning the process of fetching a dog from the Dog API\r\nconst API_CALL_REQUEST = 'Dog/API_CALL_REQUEST';\r\n\r\n// We successfully retrieved a dog and are therefore no longer in the process of fetching one.\r\nconst API_CALL_SUCCESS = 'Dog/API_CALL_SUCCESS';\r\n\r\n// Something went wrong with our API call\r\nconst API_CALL_FAILURE = 'Dog/API_CALL_FAILURE';\r\n\r\nexport { API_CALL_REQUEST, API_CALL_SUCCESS, API_CALL_FAILURE };\r\n","import {\r\n  API_CALL_REQUEST,\r\n  API_CALL_SUCCESS,\r\n  API_CALL_FAILURE\r\n} from './types';\r\n\r\n// reducer with initial state\r\nconst initialState = {\r\n  fetching: false,\r\n  dog: null,\r\n  error: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case API_CALL_REQUEST:\r\n      return { ...state, fetching: true, error: null };\r\n    case API_CALL_SUCCESS:\r\n      // If successful, we dispatch API_CALL_SUCCESS along with the dog\r\n      return { ...state, fetching: false, dog: action.dog };\r\n    case API_CALL_FAILURE:\r\n      // If a failure, we’ll dispatch API_CALL_FAILURE along with the error.\r\n      return { ...state, fetching: false, dog: null, error: action.error };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport dog from './modules/dog/reducers';\r\n\r\nexport default combineReducers({\r\n  dog\r\n});\r\n","import {\r\n  API_CALL_REQUEST,\r\n  API_CALL_SUCCESS,\r\n  API_CALL_FAILURE\r\n} from './types';\r\n\r\n// Action creators\r\nconst dogRequest = () => ({ type: API_CALL_REQUEST });\r\n\r\nconst dogSuccess = dog => ({ type: API_CALL_SUCCESS, dog });\r\n\r\nconst dogFailure = error => ({ type: API_CALL_FAILURE, error });\r\n\r\nexport { dogRequest, dogSuccess, dogFailure };\r\n","import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  API_CALL_REQUEST\r\n} from './types';\r\n\r\nimport {\r\n  dogFailure,\r\n  dogSuccess\r\n} from './actions';\r\n\r\n// watcher saga: watches for actions dispatched to the store, starts worker saga\r\nexport function* watcherSaga() {\r\n  yield takeLatest(API_CALL_REQUEST, workerSaga);\r\n}\r\n\r\n// worker saga: makes the api call when watcher saga sees the action\r\nfunction* workerSaga() {\r\n  try {\r\n    // 1st Iteration\r\n    const response = yield call(fetchDog);\r\n    const dog = response.data.message;\r\n\r\n    // 2nd Iteration\r\n    // dispatch a success action to the store with the new dog\r\n    yield put(dogSuccess(dog));\r\n\r\n  } catch (error) {\r\n    // 3rd Iteration\r\n    // dispatch a failure action to the store with the error\r\n    yield put(dogFailure(error));\r\n  }\r\n}\r\n\r\n// function that makes the api request and returns a Promise for response\r\nfunction fetchDog() {\r\n  return axios({\r\n    method: 'get',\r\n    url: 'https://dog.ceo/api/breeds/image/random'\r\n  });\r\n}\r\n","import { watcherSaga } from './modules/dog/sagas';\r\n\r\nconst sagas = {\r\n  run: sagaMiddleware => {\r\n    sagaMiddleware.run(watcherSaga);\r\n  }\r\n};\r\n\r\nexport default sagas;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// dev tools middleware\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// create a redux store with our reducer above and middleware\r\nlet store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\n// run the saga\r\nsagas.run(sagaMiddleware);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DogComponent = props => (\r\n  <img src={props.dog || props.logo} className=\"App-logo\" alt=\"logo\" onClick={props.onRequestDog} />\r\n);\r\n\r\nDogComponent.propTypes = {\r\n  dog: PropTypes.string,\r\n  logo: PropTypes.any.isRequired,\r\n  onRequestDog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DogComponent;\r\n","import DogContainer from './DogContainer';\r\n\r\nexport default DogContainer;\r\n","// Redux\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  dogRequest\r\n} from './../../redux/modules/dog/actions';\r\n\r\n// Components\r\nimport DogComponent from './DogComponent';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dog: state.dog.dog,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onRequestDog: () => dispatch(dogRequest())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DogComponent);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TitleComponent = props => {\r\n  const title = props.error ? props.error.message : props.fetching ? 'Fetching...' : 'Keep clicking for new dogs';\r\n\r\n  return <h1 className=\"App-title\" style={props.error ? { color: 'red' } : null}>{title}</h1>;\r\n};\r\n\r\nTitleComponent.propTypes = {\r\n  error: PropTypes.object,\r\n  fetching: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default TitleComponent;\r\n","import TitleContainer from './TitleContainer';\r\n\r\nexport default TitleContainer;\r\n","// Redux\r\nimport { connect } from 'react-redux';\r\n\r\n// Components\r\nimport TitleComponent from './TitleComponent';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fetching: state.dog.fetching,\r\n    error: state.dog.error\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TitleComponent);\r\n","import React from 'react';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n// Locals\nimport logo from './logo.svg';\nimport './App.css';\n\n// Components\nimport DogContainer from './components/Dog';\nimport TitleContainer from './components/Title';\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DogContainer logo={logo} />\n        <TitleContainer logo={logo} />\n      </header>\n    </div>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}